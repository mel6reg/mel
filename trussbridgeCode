%starting over 

clear; clc;

%%EK301 Truss Project 
%according to design 

%number of joints 

j = 8;
% number of members 

m = 13;
C = zeros(j,m);

members = [1,2; %Mem AB
           2,3; %Mem BC
           3,4; %Mem CD
           4,5; %Mem DE
           5,6; %Mem EF
           6,7; %Mem FG
           7,8; %Mem GH
           1,4; %Mem AD
           8,6; %Mem FH
           3,5; %Mem CE
           5,7; %Mem EG
           4,6; %Mem DF
           2,4; %Mem BD
           ];

for i = 1:size(members,1)
    C(members(i,1),i)=1;
    C(members(i,2),i)=1;
end 



    
Sx = zeros(j,3);
Sy = zeros(j,3);

Sx(1,1) = 1;
Sy(1,2) = 1;
Sy(8,3) = 1;

X = [0,0,4,4,8,8,12,12];
Y = [0,4,8,4,8,4,4,0];

A = zeros(2*j, m+3);
member_len = zeros(1, m);

p_crit = zeros(m, 1);

for i = 1:m
    
    membersIndex = find(C(:, i));

    % Check if membersIndex has two elements
    if length(membersIndex) ~= 2
        error('Member %d does not have two joints connected.', i);
    end
    
    memberStart = members(i, 1);
    memberEnd = members(i,2);

    deltaX = X(memberEnd) - X(memberStart);
    deltaY = Y(memberEnd) - Y(memberStart);
    distance = sqrt(deltaX^2 + deltaY^2);

    % values to A matrix for each member
    A(memberStart, i) = deltaX / distance;
    A(memberEnd, i) = -deltaX / distance;
    A(memberStart + j, i) = deltaY / distance;
    A(memberEnd + j, i) = -deltaY / distance;

    member_len(i,1) =  distance;

    P_crit(i,1) = -3054.789 * distance^(-2.009);
    
end 

A(1:j, end-2:end) = Sx;
A(j+1:end, end-2:end) = Sy;

L = zeros(2*j,1);
L(j+4) = 25; 
w = L(j+4);
                
T = A \ L;

%if load was on more than one joint// this can be used to find if there was
%more loads on the structure 
load = 0;
for i = 1:size(L,1)
    if (L(i,1) ~= 0)
        load = load + L(i,1);
    end
end % used to count the cost load ratio at the end 

%wLoad = 1000*10^3; %32 oz

%rm = T(1:m)/ wLoad;
%%Wfailure_m = -P_crit ./ rm; 

Wfail = zeros(m,1);
index = 0;
breaker = 0;

for i = 1:m
    Wfail(i) = T(i)/P_crit(i);
    if (Wfail(i)>breaker)
        breaker = breaker + Wfail;
        index = i;
        if (breaker>= 1)
            fprintf('Bridge will fail at member %d\n', index);
        end
    end
end

rm = T(1:m)/ w;
tm = rm*w;

P_crit = 3054.789 * member_len.^(-2.009); 
tc = -P_crit;
rc = tc / w;

w_fail = -p_crit./rc;


%critical member and minimum w failure
[min_w_fail,crit_mem] = min(Wfail);


%critical member and minimum w failure
min_w_fail = min(Wfail);


%fprintf('The critical member is %d, and minimum is at %.2f\n', crit_mem, abs(min_w_fail));

save('TrussDesign1_AnaJindongMelissa_A3.mat','C','Sx','Sy','X','Y','L')


fprintf('\\%% EK301, Section A3, Group 19: Jindong F.,Ana J.,Melissa R.,4/1/2024.\n');

fprintf('Load: %d N\n',w);

fprintf('Member forces in oz:\n');
for i = 1:m
    if T(i)< 0
        force = 'C';
    elseif T(i) == 0 
        force = 'N/A';
    else 
        force = 'T';
    end

    fprintf('m%d: %.3f (%s)\n',i,abs(T(i)),force);
end 

fprintf('Reaction forces in oz:\n');

Sx1 = T(m + 1, 1); 
Sy1 = T(m + 2, 1); 
Sy2 = T(m + 3, 1); 


fprintf('Sx1: %.2f\n', Sx1);
fprintf('Sy1: %.2f\n', Sy1);
fprintf('Sy2: %.2f\n', Sy2);


%cost calc 

c1 = 10;
c2 = 1; 


cost = (c1*j)+(c2*sum(member_len(:)));

%theo_ml_cr = min_w_fail /cost; 

fprintf('Cost of truss: $%.0f\n',cost);

fprintf('Theoretical max load/ cost ratio in oz/$: %.4f\n',abs(min_w_fail) /cost);
